<?php
/**
 * This file remains to the GTFS-REST-API - Copyright (c) 2020.
 *
 * @author Sebastian Knopf
 * @license http://opensource.org/licenses/MIT MIT
 */

/**
 * This file was generated by Atlas. Changes will be overwritten.
 */
declare(strict_types=1);

namespace App\Data\StopTime;

use Atlas\Table\Table;

/**
 * @method StopTimeRow|null fetchRow($primaryVal)
 * @method StopTimeRow[] fetchRows(array $primaryVals)
 * @method StopTimeTableSelect select(array $whereEquals = [])
 * @method StopTimeRow newRow(array $cols = [])
 * @method StopTimeRow newSelectedRow(array $cols)
 */
class StopTimeTable extends Table
{
    const DRIVER = 'sqlite';

    const NAME = 'stop_times';

    const COLUMNS = [
        'trip_id' => array (
  'name' => 'trip_id',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'arrival_time' => array (
  'name' => 'arrival_time',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'departure_time' => array (
  'name' => 'departure_time',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'stop_id' => array (
  'name' => 'stop_id',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'stop_sequence' => array (
  'name' => 'stop_sequence',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'stop_headsign' => array (
  'name' => 'stop_headsign',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'pickup_type' => array (
  'name' => 'pickup_type',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'drop_off_type' => array (
  'name' => 'drop_off_type',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'shape_dist_traveled' => array (
  'name' => 'shape_dist_traveled',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
        'timepoint' => array (
  'name' => 'timepoint',
  'type' => 'TEXT',
  'size' => NULL,
  'scale' => NULL,
  'notnull' => false,
  'default' => NULL,
  'autoinc' => false,
  'primary' => false,
  'options' => NULL,
),
    ];

    const COLUMN_NAMES = [
        'trip_id',
        'arrival_time',
        'departure_time',
        'stop_id',
        'stop_sequence',
        'stop_headsign',
        'pickup_type',
        'drop_off_type',
        'shape_dist_traveled',
        'timepoint',
    ];

    const COLUMN_DEFAULTS = [
        'trip_id' => null,
        'arrival_time' => null,
        'departure_time' => null,
        'stop_id' => null,
        'stop_sequence' => null,
        'stop_headsign' => null,
        'pickup_type' => null,
        'drop_off_type' => null,
        'shape_dist_traveled' => null,
        'timepoint' => null,
    ];

    const PRIMARY_KEY = [
    ];

    const AUTOINC_COLUMN = null;

    const AUTOINC_SEQUENCE = null;
}
